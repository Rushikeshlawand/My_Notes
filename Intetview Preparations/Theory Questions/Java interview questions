=====================================
Top Freshers Java Interview Questions
=====================================
1. Why String is immutable in Java ?
2. Difference between String and StringBuffer in java ?
3. Can we ovveride Static method in Java ?
4. Is string thread safe ?
5. What is String constant pool in java ?
6. How to prevent your class from being subclassed ?
7. Which two methods are overridden by an Object, intented to be used as key in Hashmap ?
8. Difference between List and Set in Java ?
9. How do you make a class immutable in java ?
10. Difference between Hashtable and Hashmap in java ?
11. How will you iterate map ?
12. What is type safety ? How to use it ?
13. Difference between Arraylist and Linkedlist in java ?
14. Difference between checked and unchecked exception in java ?
15. How to convert array to a list ?
16. Difference between Serializable and Externalizable interface in java ?
17. Explain Singleton Design Pattern ? write you class to make singleton design pattern
18. Difference between local and instance variable
19. What is serialization
20. Difference between == and .equals in java ?
21. Difference between unique key and primary key ?
22. Difference between method overriding and method overloading in java ?
23. What are types of access specifiers
24. Explain use of this keyword ?
25. Explain exception hierarchy ?
26. What is index and view in database ?
27. Difference between extending thread class and runnable interface ?
28. How can we avoid null pointer exception ?
29. OOPS concepts
30.  Difference between Abstraction and encapsulation ? how you use it in your project
31. When to use abstract class and interface in java ?
32. Difference between abstract class and interface ?
33. Difference between Exception and errors ?
34. Difference between throw, throws and finally 
35. What is class ?
36. What is an object ?
37. Difference between class and object ?
38. What is method overloading
39. What is method overriding
40. What is a thread
41. File handling in Java ?
42. Purpose of static method and static variable ?
43. Difference between continue and break
44. What is final keyword in java ?
45. What is JIT compiler ?
46. What is WORA concept in java ?
47. Purpose of default constructor ?
48. What is class loader in java ?
49. What is inheritance
50. What is object cloning
51. What is method overriding
52. Static binding and dynamic binding
53. What is interface
54. What is exception handling in java ?
55. Can finally block be used without catch in java ?
56. What is garbage collection?
57. Difference between Array and vector ?
58. Why dont we have destructors in Java ?
59. What is object and how it is stored in Java ?
60. What is base class for all exception classes ?
61. Explain JDK, JRE and JVM in java ?
62. Why char array is preferred to store password than Strings ?
63. How many objects are created in JVM when a string type variable is assigned using new keyword ?
64. What is classpath in java ?
65. Is java completely object oriented ?
66. What makes java platform independent ?
67. What is dynamic polymorphism ?
68. What is multiple inheritance in java ?
69. is multiple inheritance supported in java ?
70. What is a wrapper class in java ?
71. Can a java source file have more than one public class ?
72. Write a program to remove duplicates from an array ?
73. Write a program to reverse a string without using any api ?
74. What are java deisgn patterns you have used in your application
75. What are the tools you have used to improve the performance of your application ?
76. How you optimize the code for jdbc
77. What are the differences between C++ and Java
78. List the features of the Java Programming language
79. What is a ClassLoader
80. What are the Memory Allocations available in JavaJava
81. What are the differences between Heap and Stack Memory in Java?
82. Define Copy Constructor in Java
83. Can you implement pointers in a Java Program
84. Differentiate between instance and local variables
85. Can you call a constructor of a class inside another constructor
86. How does the size of ArrayList grow dynamically?
87. Difference between static methods, static variables, and static classes in Java
88. Why is Java, not a pure object-oriented language
89. What do you understand about an instance variable and a local variable?
90. What are Composition and Aggregation
91. What do you mean by data encapsulation
92. What is the ‘IS-A ‘ relationship in OOPs Java
93. How is the creation of a String using new() different from that of a literal
94. Why is synchronization necessary
95. What are shallow copy and deep copy in Java
96. Write a Java Program to print Fibonacci Series using Recursion
97. Write a Java Program to find the factorial of a given number
98. Does Java work as a "pass by value" or "pass by reference" phenomenon
99. What is the difference between systems.out, System.err, and System .in ?
100. What is the purpose of generics
101. In what situations is the "super" keyword employed
102. How to write multiple catch statements under a single try block
103. What is casting ?
104. What is implicit casting ?
105. What is explicit casting ?
106. What is an enum ?
107. Can you give example of different utility methods in string class ?
108. In which scenario, code in finally is not executed ?
109. How do you create custom exception ?
110. Is try without catch is allowed ?
=====================================
Top Tricky Interview Questions on Core Java
=====================================
- Why Java is not 100% Object-oriented
- Why pointers are not used in Java
- What is JIT compiler in Java
- Why String is immutable in java
- What is a marker interface
- Can you override a private or static method in Java
- Does “finally” always execute in Java
- How Can You Make a Class Immutable
- What is singleton class in Java and how can we make a class singleton?
- How to break a Singleton pattern
- Does Java support multiple inheritances
- Can you access a non-static variable in the static context
- is it possible to load a class by two ClassLoader
- Can you explain how “Inheritance” and “Composition” are different
- What is the best candidate for the HashMap Key
- Can we use default constructor of a class even if an explicit constructor is defined
- If two threads have same priority which thread will be executed first
- Can we serialize static variables in java
- What is a deadlock in Java, and how can you create one programmatically
- Will the ‘finally’ block execute if you put the return statement or System.exit () on the ‘try‘ or ‘catch‘ block?

Top 100 Spring Interview Questions
==============================
1  What is Spring Framework
2  What are the features of Spring Framework?
3  Why is Spring preferred over frameworks or core benefits of Spring Framework
4  What do you mean by IoC (Inversion of Control) Container?
5  What are the benefits of IOC ?
6  What are different modules in spring framework ?
7  What do you understand by Dependency Injection ?
8  How Can We Inject Beans in Spring?
9  Which Is the Best Way of Injecting Beans ?
10  Explain the bean scopes supported by Spring ?
11  How to Define the Scope of a Bean?
12  Explain Spring Bean Life Cycle ?
13  Which DI would you suggest Constructor-based or setter-based DI ?
14  What are different types of auto wiring ?
15  What is the difference between Tight Coupling and Loose Coupling
16  What is the difference between a singleton and a prototype bean
17  Which is the default scope of bean in Spring? and, are they synchronized
18  Explain the concept of Autowiring
19  Spring vs Spring MVC vs Spring Boot
20  Why do we use application.properties
21  What are the actuator-provided endpoints used for monitoring the Spring boot application
22  How to enable Actuator in Spring boot application
23  List the ways to change the port of the embedded tomcat server in Spring boot
24  List some commonly used dependency starters for spring boot
25  What is the difference between the Configuration types XML and Annotation
26  What is Application Context and Explain the process of creating an ApplicationContext in Spring
27  What is the difference between Bean Factory and ApplicationContext
28  How do you implement asynchronous processing in a Spring Boot application
29  Explain the usage of the @Async annotation in Spring
30  Explain the purpose of Spring WebFlux
31  What do you mean by Spring Batch
32  What is the main use of the Spring batch framework
33  What is the role of @SpringBootApplication
34  What are some of the important Spring annotations
35  Difference between @ReqeustParam and @PathVariable in Spring MVC
36  List the difference between annotations – @SpringBootApplication and @EnableAutoConfiguration.
37  Why do we use @componentScan in class files
38  Differentiate @Component, @Repository and @Service and @Controller
39  What is the purpose of the @Qualifier annotation in Spring
40  Explain the usage of the @Transactional annotation in Spring
41  How does Transactional annonation works internally
42  Explain the usage of the @ExceptionHandler annotation in Spring MVC
43  What is the difference between RequestMapping and GetMapping
44  What are the common of Spring boot test annotations
45  When and where do you use @Transactional in testing
46  What are the differences between @MockBean and @Mock annotations
47  Why to do @Autowired when we can use NEW operator
48  What is Spring Boot Actuator, and how does it help in monitoring and managing applications
49  How can you customize Spring Boot Actuator endpoints
50  How does Spring Boot support data access
51  How do you use JPA in Spring Boot
52  How do you handle exceptions in a Spring Boot RESTful API
53  What are the annotations you use in your Spring MVC applications
54  Do you know the use of ModelAttribute application
55  What is AOP
56  Explain advice as well
57  What are the joint Point and point cut
58  How to call the stored procedure from Java using Spring Framework
59  How is an event handled in Spring
60  What is the JDBC template and how to use it in Spring
61  How do you deploy a Spring Boot application
62  What is the difference between JDBC and Spring JDBC
63  Why do we need spring-boot-maven-plugin
64  What is the difference between JPA and Hibernate
65  Differentiate between findById() and getOne
66  What are the latest specifications supported by Spring 
100  How to create a Stateful bean in Spring
67  How do you define profiles in Spring Boot
68  What is the use of Profiles in spring boot
69  How can we use profiles to configure environment-specific configuration with Spring Boot application

70  How do you write unit tests for Spring Boot applications
71  How do you perform integration testing in Spring Boot
72  What are some best practices for optimizing Spring Boot applications
73  What is the role of DispatcherServlet in Spring MVC
74  What is Transaction Management in Spring? Explain the different types of Transaction Management.
75  How do you handle database transactions in a Spring Boot application
76  How to monitor and manage a Spring Boot application
77  How to implement caching in a Spring Boot application
78  How to implement logging in a Spring Boot application
79  How to implement scheduling in a Spring Boot application
80  How to implement messaging in a Spring Boot application
81  How to implement reactive programming in a Spring Boot application
82  How to implement real-time communication in a Spring Boot application
83  How to manage application properties in a Spring Boot application
84  How to handle cross-cutting concerns in a Spring Boot application
85  How to handle authentication and authorization in a microservices architecture with Spring Boot
86  How to handle long-running tasks in a Spring Boot application
87  How to monitor and troubleshoot performance issues in a Spring Boot application
88  List out the new features available in Spring Framework 4.0 and Spring Framework 5.0
89  How do you ensure data integrity and consistency in a distributed microservices architecture with Spring Boot
90  How to handle WebSocket communication in Spring
91  How are mock frameworks such as Mockito or EasyMock used in Spring Boot
92  How do you create RESTful APIs using Spring Boot
93  How do you secure a Spring Boot application
94  How does Spring Boot support OAuth 2.0
95  How do you implement security in a Spring Boot application
96  What is Spring Security
97  How Do You Configure Basic Authentication In Spring Security?
98  What Is CSRF Protection And How Is It Implemented In Spring Security?
99  Explain the concept of Spring Security OAuth
100  What is JWT ? How to implement it using Spring Boot Security